using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Pig_the_game
{
    
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        class Globals
        {
            //Stores current play with the first player always being player 1
            public static int CurrentPlayer = 1;

            //Stores the total amount of scores so far
            public static int player1ScoreTotal;
            public static int player2ScoreTotal;

            //Holders of current round scores
            public static int playerCurrScore = 0;
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void label2_Click(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {
            //When Roll button is press the below is executed.

            //variable r to store the random number and count to store how many spins the player did this round
            int r, count =0;
 
            Random random = new Random();
            //The R will be in charge of storing a value generated by random.Next
            r = random.Next(1, 6);

            //uses switch to check who is the current player (by default it always starts with 1)
            switch (Globals.CurrentPlayer)
            {
                case 1:
                    //changes the label 'Current Player' to Player 1
                    this.CurrentPlayer.Text = playername1;
                    
                    if (r == 1)
                    {
                        
                        this.DiceRoll.Text = "Yicks! you rolled a: " + r;

                        //change current player from 1 to 2
                        Globals.CurrentPlayer = 2;

                        //if r = 1 alert player 1 that he needs to give controlls to player 2
                        MessageBox.Show("Oh no! you rolled a 1. Changing player to "+ playername2);
                        
                        //resets current score of player 1 to: 0
                        Globals.playerCurrScore = 0;
                        this.lblTotalSc1.Text = "Total for "+playername1+": " + Globals.playerCurrScore;

                        //clear the list containing this rounds score of player 1
                        ListPlayer1.Items.Clear();

                    }
                    else
                    {
                        //Algorithm to keep adding to each other.
                        Globals.playerCurrScore = Globals.playerCurrScore + r;

                        //update the total amount accumilated from the dices.
                        this.lblTotalSc1.Text = "Total for "+ playername1 + ": " + Globals.playerCurrScore;
                        
                        //Shows what number the r has stored
                        this.DiceRoll.Text = "You rolled a " + r;
                        ListPlayer1.Items.Add(r);

                        //Checks how many times the dice has been rolled
                        count = ListPlayer1.Items.Count;
                        this.lblplyr.Text = ("Amount of Rolls: " + count);

                        
                    };

                    break;
                case 2:
                    //changes the label 'Current Player' to Player 2
                    this.CurrentPlayer.Text = playername2;
                    if (r == 1)
                    {
                        this.DiceRoll.Text = "Yicks you rolled a: " + r;

                        //change current player from 2 to 1
                        Globals.CurrentPlayer = 1;

                        //if r = 1 alert player 2 that he needs to give controlls to player 1
                        MessageBox.Show("Oh no! you rolled a 1. Changing player to "+ playername1);

                        //resets current score of player 2 to: 0
                        Globals.playerCurrScore = 0;
                        this.lblTotalSc2.Text = "Total for "+ playername2 + ": " + Globals.playerCurrScore;

                        //clear the list containing this rounds score of player 2
                        ListPlayer2.Items.Clear();
                    }
                    else
                    {
                        //Algorithm to keep adding to each other.
                        Globals.playerCurrScore = Globals.playerCurrScore + r;

                        //Update the total amount accumilated from the dices.
                        this.lblTotalSc2.Text = "Total for "+ playername2 + ": " + Globals.playerCurrScore;

                        //Shows what number the r has stored
                        this.DiceRoll.Text = "You rolled a " + r;
                        ListPlayer2.Items.Add(r);

                        //Checks how many times the dice has been rolled
                        count = ListPlayer2.Items.Count;
                        this.lblplyr.Text = ("Amount of Rolls: " + count);

                    };

                    break;
            }
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            //sets the Total Scores to 0
            txttbply1.Text = "0";
            txttbply2.Text = "0";
        }

        private void lblTotalSc1_Click(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            //When Hold button is press the below is executed.

            // Checks current player
            switch (Globals.CurrentPlayer)
            {
                case 1:
                    //all scores accumilated by PLayer 1 this round has been saved to a new variable "player1ScoreTotal".
                    Globals.player1ScoreTotal = Globals.player1ScoreTotal + Globals.playerCurrScore;

                    //Updates the user the new Total Amont.
                    txttbply1.Text =   Convert.ToString(Globals.player1ScoreTotal);

                    //Changes player from 1 to 2
                    Globals.CurrentPlayer = 2;
                    
                    //alerts player 1 to give controls to player 2
                    MessageBox.Show("Score is saved, please pass the control to " + playername2);
                    //clears list
                    ListPlayer1.Items.Clear();
                    break;

                case 2:
                    //all scores accumilated by PLayer 2 this round has been saved to a new variable "player2ScoreTotal".
                    Globals.player2ScoreTotal = Globals.player2ScoreTotal + Globals.playerCurrScore;

                    //Updates the user the new Total Amont.
                    txttbply2.Text = Convert.ToString(Globals.player2ScoreTotal);

                    //Changes player from 2 to 1
                    Globals.CurrentPlayer = 1;

                    //alerts player 1 to give controls to player 2
                    MessageBox.Show("Score is saved, please pass the control to "+ playername1);

                    //clears list
                    ListPlayer2.Items.Clear();
                    break;
            }

            //Resets current round player score to 0
            Globals.playerCurrScore = 0;

            //After the scores are "saved", here it checks if the following conditions have been met.
            // if both player 1 & player 2 has over 100 points than it's a draw!
            if (Globals.player1ScoreTotal >= 100 && Globals.player2ScoreTotal >= 100)
            {
                MessageBox.Show("It's a Draw!");
                this.Close();
            }
            // if player 2 has over 100 points but Player 1 has less than 100 than player 2 wins!
            else if (Globals.player2ScoreTotal >= 100 && Globals.player1ScoreTotal < 100)
            {
                MessageBox.Show(playername2+" has won!");
                this.Close();
            }
            // if player 1 has over 100 points but Player 2 has less than 100 than player 1 wins!
            else if (Globals.player1ScoreTotal >= 100 && Globals.player2ScoreTotal < 100)
            {
                MessageBox.Show(playername1 +" has won!");
                this.Close();
            }

        }
        public string playername1;
        public string playername2;

        public string playernam1
        {

            get { return playername1; }
            set { playername1 = value; }
        }
        public string playernam2
        {
            get { return playername2; }
            set { playername2 = value; }
        }
    }
}